<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.dao.ExamSessionDao">

    <resultMap id="ExamSessionMap" type="ExamSession" autoMapping="true">
        <result property="subjectId" column="subject_id"/>
        <result property="teacherId" column="teacher_id"/>
        <association property="subject" javaType="Subject" select="com.exam.dao.SubjectDao.findById"
                     column="subject_id"/>
        <association property="teacher" javaType="User" select="com.exam.dao.UserDao.findUserByUserId"
                     column="teacher_id"/>
    </resultMap>
    <select id="selectAll" resultMap="ExamSessionMap">
        SELECT
        t_exam_session.id,
        t_exam_session.subject_id,
        t_exam_session.teacher_id,
        t_exam_session.student_num,
        t_exam_session.begin_time,
        t_exam_session.end_time,
        t_exam_session.during_time
        FROM
        t_exam_session
    </select>

    <select id="selectById" parameterType="String" resultMap="ExamSessionMap">
        SELECT
        t_exam_session.id,
        t_exam_session.subject_id,
        t_exam_session.teacher_id,
        t_exam_session.student_num,
        t_exam_session.begin_time,
        t_exam_session.end_time,
        t_exam_session.during_time
        FROM
        t_exam_session
        WHERE
        t_exam_session.id = #{id}
    </select>

    <update id="updateExamSession" parameterType="ExamSession">
        UPDATE
        `exam`.`t_exam_session`
        SET
        `subject_id` = #{subjectId},
        `teacher_id` = #{teacherId},
        `student_num` = #{studentNum},
        `begin_time` = #{beginTime},
        `end_time` = #{endTime},
        `during_time` = #{duringTime}
        WHERE
        `id` = #{id}
    </update>

    <insert id="insertExamSession" parameterType="ExamSession">
        INSERT INTO
        `exam`.`t_exam_session`
        (`id`,
        `subject_id`,
        `teacher_id`,
        `student_num`,
        `begin_time`,
        `end_time`,
        `during_time`)
        VALUES
        (REPLACE(UUID(),'-',''),
        #{subjectId},
        #{teacherId},
        #{studentNum},
        #{beginTime},
        #{endTime},
        #{duringTime})
    </insert>

    <delete id="deleteById" parameterType="String">
        DELETE FROM t_exam_session WHERE `id` = #{id}
    </delete>

    <delete id="deleteAllById" parameterType="List">
        DELETE FROM t_exam_session WHERE
        <foreach collection="list" item="id" open="`id` in (" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updatePapersIdInSessionPapersStudent">
        UPDATE `exam`.`t_session_papers_student`
        SET `papers_id` = #{papersId}
        WHERE
        `exam_session_id` = #{examSessionId}
        AND `student_id` = #{studentId}
    </update>

    <select id="selectAllOfStudent" resultMap="ExamSessionMap">
        SELECT
        t_exam_session.id,
        t_exam_session.subject_id,
        t_exam_session.teacher_id,
        t_exam_session.student_num,
        t_exam_session.begin_time,
        t_exam_session.end_time,
        t_exam_session.during_time,
        t_session_papers_student.student_id
        FROM
        t_exam_session
        INNER JOIN t_session_papers_student ON t_session_papers_student.exam_session_id = t_exam_session.id
        INNER JOIN t_examniee_info ON t_examniee_info.eId = t_session_papers_student.student_id
        INNER JOIN t_user ON t_user.id_card = t_examniee_info.examniee_Id
        WHERE
        t_user.user_id = #{userId}
        AND t_exam_session.begin_time &lt; NOW() + interval 8 hour
        AND t_exam_session.end_time > NOW() + interval 8 hour
    </select>
</mapper>